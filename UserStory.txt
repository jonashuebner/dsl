User Story:
Als Entwickler/QA möchte ich eine Domain-Specific-Language (DSL) für das 
Tracking der etracker Anwendung benutzen können, um bei der Entwicklung 
fachliche Use-Cases einfach und mit wenig Aufwand beschreiben zu können.

Komponenten:
* Java-Library, welche die eigentliche DSL enthält
* Eigene Komponente, welche die Daten mittels HBase Put Statements in 
   eine HBase Tabelle schreibt ('rawdb').

   // Raus, Implementierung nach meinen Klausuren? (16.02)

* Die Komponente soll für den Einsatz bei etracker durch die 
   originalen Klassen ersetzt werden können

   // Original Datenobjekte? Genau Beschreibung der Objekte...

* Dokumentation der DSL mittels Mark-Down Files, die zum Code gehören 
   und versioniert sind

* [optional] Verwendung der Library in einem HTTP-Service, damit die 
   DSL über REST angesprochen werden kann
* [optional] Einbau der Library mit zugehöriger REST API in eine Webanwendung 
   um komfortabel Tracking Requests auslösen zu können.

Akzeptanzkriterien:
* Theoretische Betrachtung zu DSL's im Allgemeinen (siehe Martin Fowler)
* Theoretische Betrachtung der etracker Tracking DSL
* Es ist in Zusammenarbeit mit etracker eine DSL für die Anwendung spezifiziert
* Die Tracking-DSL ist in Java (Version 7 oder 8) als eigenständige Library gebaut
* Das Buildsystem ist gradle
* Die Vewendung externer Bibliotheken ist mit etracker abgestimmt
* Die Tracking-DSL ist die öffentliche Schnittstelle der Library
* Die Funktion der DSL ist mit Hilfe von Unit-/Moduletests beschrieben
* Die Tests enthalten Unit-Tests ohne die Abhängigkeit zu externen Resourcen
* Die Tests enthalten Module-Tests (mit Abhängigkeiten zu HBase)
* Unit- und Moduletests sind getrennt voneinnander aufrufbar

	// Tool für Modultests?
	// Unit - Test -> JUnit?

* Die DSL ist mit Hilfe von Mark-Down Files dokumentiert
* Die Dokumentation ist Teil des Codes und ist entsprechend versioniert
* Der Code ist in einem mercurial Repository abgelegt

Events der Tracking-DSL
* Page Impression
* Order
* OrderCancellation

	// Die Events müssen wir genau besprechen

* [optional] App-Tracking Screen-View
* [optional] Generisches Event

Links:
http://www.cloudera.com/content/www/en-us.html - Hadoop/HBase framework
http://martinfowler.com/
https://www.mercurial-scm.org/
http://gradle.org/ - Build system
http://www.dropwizard.io/ - Java framework
https://atom.io/ - Editor